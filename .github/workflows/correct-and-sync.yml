name: ALN File Correction & Live Repo Sync

on:
  workflow_dispatch:
  push:
    branches: ["main"]

jobs:
  correct-and-sync:
    runs-on: ubuntu-latest

    steps:
      # --- Full-depth checkout with PAT for push/rebase ---
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          repository: Doctor0Evil/ALN_Programming_Language
          token: ${{ secrets.ALN_PUSH_TOKEN }}   # Must be a PAT with 'repo' + 'workflow' scopes
          persist-credentials: true
          clean: true
          sparse-checkout-cone-mode: true
          fetch-tags: false
          show-progress: true
          lfs: false
          submodules: false
          set-safe-directory: true

      # --- Normalize line endings to LF ---
      - name: Normalize Line Endings
        run: |
          find . -type f ! -path "./.git/*" -exec dos2unix {} \;

      # --- Strip trailing whitespace ---
      - name: Remove Trailing Whitespace
        run: |
          find . -type f ! -path "./.git/*" -exec sed -i "s/[ \t]*$//" {} \;

      # --- Extra ALN-specific CR removal ---
      - name: Format ALN files (if '.aln' extension)
        run: |
          for file in $(find . -type f -name "*.aln"); do
            sed -i "s/\r//g" "$file"
          done

      # --- Commit and safe push with retry logic ---
      - name: Auto-commit & Safe Push with Retry
        shell: bash
        run: |
          set -e

          git config user.name "ALN-AutoFixer"
          git config user.email "autofix@aln.dev"

          git add .

          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "ALN: Automatic repository-wide file correction"

          # Use the same PAT for pushing
          git remote set-url origin https://x-access-token:${{ secrets.ALN_PUSH_TOKEN }}@github.com/Doctor0Evil/ALN_Programming_Language.git

          attempt_push() {
            git pull --rebase origin main || return 1
            git push origin main || return 1
          }

          for i in 1 2 3; do
            if attempt_push; then
              echo "Push successful."
              exit 0
            fi
            echo "Push failed (attempt $i). Retrying in $((i*5))s..."
            sleep $((i*5))
          done

          echo "Push failed after 3 attempts."
          exit 1
