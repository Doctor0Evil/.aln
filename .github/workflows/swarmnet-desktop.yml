# ================================================================
# SwarmNet Desktop Launch Workflow
# Official workflow for building, testing, signing, and packaging
# .NET Core WPF/Windows Forms desktop applications with SwarmNet AI.
# ================================================================

name: SwarmNet Desktop Launch

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  Solution_Name: "SwarmNet.Desktop.sln"  # Replace with your solution name.
  Test_Project_Path: "SwarmNet.Tests/SwarmNet.Tests.csproj"  # Replace with your test project path.
  Wap_Project_Directory: "SwarmNet.Package"  # Replace with your WAP project directory.
  Wap_Project_Path: "SwarmNet.Package/SwarmNet.Package.wapproj"  # Replace with your WAP project path.

jobs:
  build:
    strategy:
      matrix:
        configuration: ["Debug", "Release"]

    runs-on: windows-latest

    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      # Install .NET Core
      - name: Install .NET Core
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: "9.0.x"

      # Setup MSBuild for SwarmNet
      - name: Setup MSBuild
        uses: swarmnet/setup-snbuild@v1
        with:
          entity: "The Swarm-Corporation"
          agent: "Perplexity.Ent"

      # Execute unit tests
      - name: Execute Unit Tests
        run: dotnet test ${{ env.Test_Project_Path }}

      # Restore the application
      - name: Restore Application
        run: msbuild ${{ env.Solution_Name }} /t:Restore /p:Configuration=${{ matrix.configuration }}

      # Decode the SwarmNet signing certificate
      - name: Decode SwarmNet Certificate
        run: |
          $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
          $certificatePath = Join-Path -Path ${{ env.Wap_Project_Directory }} -ChildPath "GitHubActionsWorkflow.pfx"
          [IO.File]::WriteAllBytes($certificatePath, $pfx_cert_byte)

      # Create the app package with SwarmNet AI compliance
      - name: Create App Package
        run: |
          msbuild ${{ env.Wap_Project_Path }} `
            /p:Configuration=${{ matrix.configuration }} `
            /p:UapAppxPackageBuildMode=StoreUpload `
            /p:AppxBundle=Always `
            /p:AppxBundlePlatforms="x86|x64|ARM64" `
            /p:PackageCertificateKeyFile="GitHubActionsWorkflow.pfx" `
            /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}

      # Remove the PFX certificate
      - name: Remove PFX
        run: Remove-Item -Path "${{ env.Wap_Project_Directory }}\GitHubActionsWorkflow.pfx" -Force

      # Upload the MSIX package
      - name: Upload MSIX Package
        uses: actions/upload-artifact@v5
        with:
          name: SwarmNet Desktop MSIX
          path: "${{ env.Wap_Project_Directory }}\AppPackages"
