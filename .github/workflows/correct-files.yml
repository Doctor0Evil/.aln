name: correct-files

on:
  workflow_dispatch:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: correct-files-${{ github.ref_name }}
  cancel-in-progress: false  # Let current job finish; queue new ones per branch

jobs:
  correct-files:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-24.04, macos-latest]

    steps:
      # --- Checkout with full history for clean rebase ---
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      # --- Install PowerShell on non-Windows runners ---
      - name: Install PowerShell (non-Windows)
        if: runner.os != 'Windows'
        uses: PSModule/install-powershell@v1
        with:
          Version: 'latest'

      # --- Show PowerShell version for audit ---
      - name: Show PowerShell version
        shell: pwsh
        run: |
          Write-Host "PowerShell version in this runner:"
          $PSVersionTable

      # --- Run all correction scripts in scripts/ ---
      - name: Run ALN correction scripts
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $scriptDir = Join-Path $PWD 'scripts'
          if (-not (Test-Path $scriptDir)) {
            throw "Directory not found: $scriptDir"
          }

          $scripts = Get-ChildItem -Path $scriptDir -Filter '*.ps1' -File
          if (-not $scripts) {
            Write-Warning "No PowerShell scripts found in $scriptDir"
            exit 0
          }

          $failures = @()

          foreach ($script in $scripts) {
            Write-Host "=== Running $($script.Name) ==="
            & $script.FullName
            $exitCode = $LASTEXITCODE
            if ($exitCode -ne 0) {
              Write-Warning "Script failed: $($script.Name) with exit code $exitCode"
              $failures += "$($script.Name): exit code $exitCode"
            }
          }

          if ($failures.Count -gt 0) {
            throw "One or more scripts failed:`n$($failures -join "`n")"
          }

      # --- Show summary of changes for auditing ---
      - name: Show Git status & diff summary
        shell: bash
        run: |
          echo "===== GIT STATUS ====="
          git status
          echo
          echo "===== DIFF SUMMARY ====="
          git diff --stat || true
          echo
          echo "===== FULL DIFF SNIPPETS ====="
          git diff || true

      # --- Commit, rebase, safe push with retry ---
      - name: Commit & safe push corrections (with auto-retry)
        shell: bash
        run: |
          set -e

          git config user.name "ALN File Corrector"
          git config user.email "actions@github.com"

          git add .

          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi

          git commit -m "Automated ALN file correction"

          attempt_push() {
            git pull --rebase origin "${GITHUB_REF_NAME}" || return 1
            if [ "$(git rev-list HEAD ^origin/${GITHUB_REF_NAME} --count)" -gt 0 ]; then
              git push origin "${GITHUB_REF_NAME}" || return 1
              echo "Push successful."
            else
              echo "No new commits to push after rebase."
            fi
          }

          for i in 1 2 3; do
            if attempt_push; then
              exit 0
            fi
            echo "Push failed (attempt $i). Retrying in $((i*5))s..."
            sleep $((i*5))
          done

          echo "Push failed after 3 attempts."
          exit 1
